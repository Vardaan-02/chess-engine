cmake_minimum_required(VERSION 3.16)
project(ChessEngine VERSION 0.1 LANGUAGES CXX)

# Use modern C++
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Output directories
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

# Include headers
include_directories(${PROJECT_SOURCE_DIR}/include/chess)

# Collect source files automatically from src/
file(GLOB_RECURSE ENGINE_SOURCES ${PROJECT_SOURCE_DIR}/src/*.cpp)

# Main executable
add_executable(chess_engine main.cpp ${ENGINE_SOURCES})

# # Tests (all .cpp in /tests)
# file(GLOB_RECURSE TEST_SOURCES ${PROJECT_SOURCE_DIR}/tests/*.cpp)
# if(TEST_SOURCES)
#     add_executable(chess_tests ${TEST_SOURCES} ${ENGINE_SOURCES})
#     enable_testing()
#     add_test(NAME ChessEngineTests COMMAND chess_tests)
# endif()

# # Benchmarks (optional separate target)
# file(GLOB_RECURSE BENCH_SOURCES ${PROJECT_SOURCE_DIR}/benchmarks/*.cpp)
# if(BENCH_SOURCES)
#     add_executable(chess_bench ${BENCH_SOURCES} ${ENGINE_SOURCES})
# endif()

# # Tools (optional, build as small CLIs)
# file(GLOB_RECURSE TOOL_SOURCES ${PROJECT_SOURCE_DIR}/tools/*.cpp)
# foreach(tool_source ${TOOL_SOURCES})
#     get_filename_component(tool_name ${tool_source} NAME_WE)
#     add_executable(${tool_name} ${tool_source} ${ENGINE_SOURCES})
# endforeach()

# Compiler warnings
if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    target_compile_options(chess_engine PRIVATE -Wall -Wextra -Wpedantic -Werror)
elseif (MSVC)
    target_compile_options(chess_engine PRIVATE /W4 /WX)
endif()

message(STATUS "âœ… Chess Engine build configured successfully")